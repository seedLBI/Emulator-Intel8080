#pragma once
const char* FinalImage_fragment =
"#version 330 core\n"
"out vec4 FragColor;\n"
"in vec2 TexCoord;\n"
"layout(std140) uniform ValuesBlock\n"
"{\n"
"    float Time;\n"
"    float Time2;\n"
"    vec2 Resolution;\n"
"};\n"
"uniform sampler2D currentFrame;\n"
"uniform sampler2D velocityBuffer;\n"
"uniform float blurStrength = 1.f;\n"
"void main() {\n"
"    vec2 texelSize = 1.0 / vec2(textureSize(currentFrame, 0));\n"
"    vec2 screenTexCoords = gl_FragCoord.xy * texelSize;\n"
"    vec2 velocity = texture(velocityBuffer, screenTexCoords).rg;\n"
"    velocity *= blurStrength;\n"
"    int MAX_SAMPLES = 32;\n"
"    float speed = length(velocity / texelSize);\n"
"    int nSamples = clamp(int(speed), 1, MAX_SAMPLES);\n"
"    vec4 oResult = texture(currentFrame, screenTexCoords);\n"
"    for (int i = 1; i < nSamples; ++i) {\n"
"        vec2 offset = velocity * (float(i) / float(nSamples - 1) - 0.5);\n"
"		 vec2 offff = screenTexCoords + offset;\n"
"        offff = clamp(offff,vec2(0.f,0.f),Resolution*texelSize - vec2(0.001f,0.f));\n"


"        oResult += texture(currentFrame,offff);\n"
"    }\n"
"    oResult /= float(nSamples);\n"
"    FragColor = oResult;\n" 
//"    FragColor = vec4(vec3(1.f,1.f,1.f) - oResult.rgb,oResult.a);\n"
//"    FragColor = mix(texture(velocityBuffer, screenTexCoords),oResult,0.5f ); "
"}\n";