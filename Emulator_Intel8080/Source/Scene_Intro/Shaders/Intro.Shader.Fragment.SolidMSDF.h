#pragma once
const char* SolidMSDF_fragment =
"#version 330 core\n"
"in vec2 TexCoord;\n"
"in float Position_X;\n"
"out vec4 fragColor;\n"
"uniform sampler2D MSDF_texture;\n"
"uniform vec4 bgColor = vec4(0.f);\n"
"uniform vec4 fgColor = vec4(1.f, 1.f, 1.f, 1.f);\n"
"uniform float pxRange = 1.001f;\n"
"layout(std140) uniform ValuesBlock\n"
"{\n"
"    float Time;\n"
"    float Time2;\n"
"    vec2 Resolution;\n"
"};\n"
"uniform bool BlinkingMode = false;\n"
"float median(float r, float g, float b) {\n"
"    return max(min(r, g), min(max(r, g), b));\n"
"}\n"
"float screenPxRange(vec2 coords) {\n"
"    vec2 unitRange = vec2(pxRange) / vec2(textureSize(MSDF_texture, 0));\n"
"    vec2 screenTexSize = vec2(1.0) / fwidth(coords);\n"
"    return max(0.5 * dot(unitRange, screenTexSize), 1.0);\n"
"}\n"
"float offsetSin(float t) {\n"
"    return sin(t) * 0.5 + 0.5;\n"
"}\n"
"void main() {\n"
"    vec3 msd = texture(MSDF_texture, TexCoord).rgb;\n"
"    float sd = median(msd.r, msd.g, msd.b);\n"
"    float screenPxDistance = screenPxRange(TexCoord) * (sd - 0.5);\n"
"    float opacity = clamp(screenPxDistance + 0.5, 0.0, 1.0);\n"
"    vec4 FinalColor =  mix(bgColor, fgColor, 1.f + float(BlinkingMode) * (-1.f + Time2*0.4 + Time2*0.6 * offsetSin(10.f * Time)));\n"
"    fragColor = mix(bgColor,FinalColor, opacity);\n"
//"    fragColor = vec4(0.f,0.f,0.f,1.f);"
"}\n";

